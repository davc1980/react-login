{"version":3,"sources":["Protected.js","Public.js","App.js","index.js"],"names":["Protected","user","netlifyIdentity","currentUser","console","log","React","createElement","email","Public","netlifyAuth","isAuthenticated","authenticate","callback","_this","this","open","on","signout","_this2","logout","AuthButton","withRouter","_ref","history","onClick","push","PrivateRoute","_ref2","Component","component","rest","_objectWithoutProperties","Route","Object","assign","render","props","Redirect","to","pathname","state","from","location","Login","_React$Component","_inherits","_super","_createSuper","_this3","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","redirectToReferrer","login","setState","_createClass","key","value","AuthExample","Router","Link","path","window","init","ReactDOM","App","document","getElementById"],"mappings":"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","file":"static/js/main.914cfd6e.chunk.js","sourcesContent":["import React from \"react\";\nimport netlifyIdentity from \"netlify-identity-widget\";\nexport default function Protected() {\n  const user = netlifyIdentity.currentUser();\n  console.log({ user });\n  return (\n    <div>\n      <h3>Protected Page</h3>\n      You are logged in as <b>{user.email}</b>\n    </div>\n  );\n}\n","import React from 'react';\nexport default function Public() {\n  return <h3>Public</h3>;\n}\n","import React from 'react';\nimport Protected from './Protected';\nimport Public from './Public';\nimport netlifyIdentity from 'netlify-identity-widget';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from 'react-router-dom';\n\n// copied straight from https://reacttraining.com/react-router/web/example/auth-workflow\n////////////////////////////////////////////////////////////\n// 1. Click the public page\n// 2. Click the protected page\n// 3. Log in\n// 4. Click the back button, note the URL each time\n\nfunction AuthExample() {\n  return (\n    <Router>\n      <div>\n        <AuthButton />\n        <ul>\n          <li>\n            <Link to=\"/public\">Public Page</Link>\n          </li>\n          <li>\n            <Link to=\"/protected\">Protected Page</Link>\n          </li>\n        </ul>\n        <Route path=\"/public\" component={Public} />\n        <Route path=\"/login\" component={Login} />\n        <PrivateRoute path=\"/protected\" component={Protected} />\n      </div>\n    </Router>\n  );\n}\n\nconst netlifyAuth = {\n  isAuthenticated: false,\n  user: null,\n  authenticate(callback) {\n    this.isAuthenticated = true;\n    netlifyIdentity.open();\n    netlifyIdentity.on('login', user => {\n      this.user = user;\n      callback(user);\n    });\n  },\n  signout(callback) {\n    this.isAuthenticated = false;\n    netlifyIdentity.logout();\n    netlifyIdentity.on('logout', () => {\n      this.user = null;\n      callback();\n    });\n  }\n};\n\nconst AuthButton = withRouter(\n  ({ history }) =>\n    netlifyAuth.isAuthenticated ? (\n      <p>\n        Welcome!{' '}\n        <button\n          onClick={() => {\n            netlifyAuth.signout(() => history.push('/'));\n          }}\n        >\n          Sign out\n        </button>\n      </p>\n    ) : (\n      <p>You are not logged in.</p>\n    )\n);\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        netlifyAuth.isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nclass Login extends React.Component {\n  state = { redirectToReferrer: false };\n\n  login = () => {\n    netlifyAuth.authenticate(() => {\n      this.setState({ redirectToReferrer: true });\n    });\n  };\n\n  render() {\n    let { from } = this.props.location.state || { from: { pathname: '/' } };\n    let { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer) return <Redirect to={from} />;\n\n    return (\n      <div>\n        <p>You must log in to view the page at {from.pathname}</p>\n        <button onClick={this.login}>Log in</button>\n      </div>\n    );\n  }\n}\nexport default AuthExample;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\nimport netlifyIdentity from 'netlify-identity-widget';\n\nwindow.netlifyIdentity = netlifyIdentity;\n// You must run this once before trying to interact with the widget\nnetlifyIdentity.init();\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker();\n"],"sourceRoot":""}